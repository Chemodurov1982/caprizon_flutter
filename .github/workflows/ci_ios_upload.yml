name: Build and Upload iOS App

on:
  workflow_dispatch:

jobs:
  build_and_upload:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3' # ← замени на свою, если другая

      - name: Install dependencies
        run: flutter pub get

      - name: Build iOS (no signing)
        run: flutter build ios --release --no-codesign

      - name: Archive with xcodebuild (no signing)
        run: |
          xcodebuild -workspace ios/Runner.xcworkspace \
                     -scheme Runner \
                     -configuration Release \
                     -archivePath build/ios/archive/Runner.xcarchive \
                     CODE_SIGN_STYLE=Manual \
                     DEVELOPMENT_TEAM="" \
                     archive

      - name: Export IPA with xcodebuild
        run: |
          cat <<EOF > ExportOptions.plist
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
            <dict>
              <key>method</key>
              <string>app-store</string>
              <key>signingStyle</key>
              <string>manual</string>
              <key>stripSwiftSymbols</key>
              <true/>
              <key>compileBitcode</key>
              <true/>
              <key>manageAppVersionAndBuildNumber</key>
              <false/>
              <key>destination</key>
              <string>export</string>
            </dict>
          </plist>
          EOF

          xcodebuild -exportArchive \
            -archivePath build/ios/archive/Runner.xcarchive \
            -exportOptionsPlist ExportOptions.plist \
            -exportPath build/ios/ipa

      - name: Install Fastlane
        run: gem install fastlane

      - name: Upload to TestFlight
        env:
          APPSTORE_CONNECT_KEY_ID: ${{ secrets.APPSTORE_CONNECT_KEY_ID }}
          APPSTORE_CONNECT_ISSUER_ID: ${{ secrets.APPSTORE_CONNECT_ISSUER_ID }}
          APPSTORE_CONNECT_PRIVATE_KEY: ${{ secrets.APPSTORE_CONNECT_PRIVATE_KEY }}
        run: |
          mkdir -p fastlane
          echo "$APPSTORE_CONNECT_PRIVATE_KEY" > fastlane/AuthKey.p8
          KEY_ESCAPED=$(awk '{printf "%s\\n", $0}' fastlane/AuthKey.p8)

          cat <<EOF > fastlane/api_key.json
          {
            "key_id": "${APPSTORE_CONNECT_KEY_ID}",
            "issuer_id": "${APPSTORE_CONNECT_ISSUER_ID}",
            "key": "${KEY_ESCAPED}",
            "in_house": false
          }
          EOF

          fastlane deliver \
            --ipa build/ios/ipa/Runner.ipa \
            --api_key_path fastlane/api_key.json \
            --skip_metadata true \
            --skip_screenshots true \
            --force
